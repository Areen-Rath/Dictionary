{"version":3,"sources":["components/InputBox.js","components/SearchButton.js","components/SpeechButton.js","screens/Dictionary.js","screens/Help.js","App.js"],"names":["InputBox","TextInput","style","styles","inputBox","placeholder","this","props","onChangeText","React","StyleSheet","create","marginTop","width","height","borderWidth","alignSelf","textAlign","SearchButton","TouchableOpacity","button","onPress","Text","buttonText","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","color","speak","a","async","Speech","text","Dictionary","getWordData","input","state","setState","word","toLowerCase","wordData","url","fetch","then","response","json","responseJson","wordDataArr","i","meanings","console","log","map","item","push","partOfSpeech","toUpperCase","definitions","definition","renderItem","View","flex","marginLeft","FlatList","data","keyExtractor","index","toString","Help","topicContainer","header","FAQs","Drawer","createDrawerNavigator","App","NavigationContainer","Navigator","initialRouteName","screenOptions","headerTitleAlign","Screen","name","component","options","headerStyle","headerTitleStyle"],"mappings":"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","file":"static/js/app.2f5e03ed.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, TextInput } from 'react-native';\r\n\r\nexport default class InputBox extends React.Component {\r\n    render(){\r\n        return (\r\n            <TextInput\r\n                style={styles.inputBox}\r\n                placeholder={this.props.placeholder}\r\n                onChangeText={this.props.onChangeText}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    inputBox: {\r\n        marginTop: 20,\r\n        width: \"80%\",\r\n        height: 40,\r\n        borderWidth: 2,\r\n        alignSelf: 'center',\r\n        textAlign: 'center'\r\n    }\r\n})","import * as React from 'react';\r\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native';\r\n\r\nexport default class SearchButton extends React.Component {\r\n    render(){\r\n        return (\r\n            <TouchableOpacity style={styles.button} onPress={this.props.onPress}>\r\n                <Text style={styles.buttonText}>Search</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        marginTop: 20,\r\n        width: 100,\r\n        height: 30,\r\n        backgroundColor: \"red\",\r\n        alignSelf: 'center',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: 'center'\r\n    },\r\n    buttonText: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 20,\r\n        color: \"white\"\r\n    }\r\n});","import * as React from 'react';\r\nimport { Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport * as Speech from 'expo-speech';\r\n\r\nexport default class SearchButton extends React.Component {\r\n    speak = async () => {\r\n        Speech.speak(this.props.text);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <TouchableOpacity\r\n                style={{alignSelf: 'flex-start'}}\r\n                onPress={() => {this.speak()}}>\r\n                <Text style={styles.text}>{this.props.text}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    text: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 30\r\n    }\r\n});","import * as React from 'react';\r\nimport { Text, View, FlatList } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport * as Speech from 'expo-speech';\r\nimport InputBox from '../components/InputBox';\r\nimport SearchButton from '../components/SearchButton';\r\nimport SpeechButton from '../components/SpeechButton'\r\n\r\nexport default class Dictionary extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            input: '',\r\n            word: '',\r\n            wordData: []\r\n        }\r\n    }\r\n\r\n    getWordData = async () => {\r\n        const { input } = this.state;\r\n\r\n        this.setState({\r\n            word: input.toLowerCase(),\r\n            wordData: []\r\n        });\r\n\r\n        var url = `https://api.dictionaryapi.dev/api/v2/entries/en/${input}`;\r\n\r\n        await fetch(url)\r\n            .then(response => response.json())\r\n            .then(responseJson => {\r\n                var wordDataArr = [];\r\n                for(var i in responseJson){\r\n                    var meanings = responseJson[i].meanings;\r\n                    console.log(meanings);\r\n                    meanings.map(item => {\r\n                        wordDataArr.push([item.partOfSpeech.toUpperCase(), item.definitions[0].definition]);\r\n                    });\r\n                }\r\n                this.setState({\r\n                    wordData: wordDataArr\r\n                });\r\n            })\r\n    }\r\n\r\n    speak = async () => {\r\n        Speech.speak(this.state.word)\r\n    }\r\n\r\n    renderItem = (item) => {\r\n        return (\r\n            <View style={{marginTop: 20}}>\r\n                <Text>{item.item[0]}</Text>\r\n                <Text>{item.item[1]}</Text>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <ScrollView style={{flex: 1, backgroundColor: \"white\"}}>\r\n                <InputBox\r\n                    placeholder=\"Enter a word\"\r\n                    onChangeText={(text) => {\r\n                        this.setState({\r\n                            input: text\r\n                        });\r\n                    }}\r\n                />\r\n                <SearchButton onPress={() => {\r\n                    if(this.state.input){\r\n                        this.getWordData();\r\n                    }\r\n                }} />\r\n                <View style={{marginTop: 20, marginLeft: 15}}>\r\n                    <SpeechButton text={this.state.word} />\r\n                    <FlatList\r\n                        data={this.state.wordData}\r\n                        renderItem={this.renderItem}\r\n                        keyExtractor={(item, index) => index.toString()}\r\n                    />\r\n                </View>\r\n                <View style={{marginTop: 50}}>\r\n                    <Text style={{textAlign: 'center'}}>Type a word and click on Search. You will get the meaning of the word.</Text>\r\n                    <Text style={{marginTop: 10, textAlign: 'center'}}>Click on the word and you can hear the pronunciation of the word.</Text>\r\n                    <Text style={{marginTop: 10, fontWeight: \"bold\", textAlign: 'center'}}>Created by Areen Rath</Text>\r\n                </View>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { Text, View, StyleSheet } from 'react-native';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\n\r\nexport default class Help extends React.Component {\r\n    render(){\r\n        return (\r\n            <ScrollView style={{flex: 1, backgroundColor: \"white\"}}>\r\n                <View style={styles.topicContainer}>\r\n                    <Text style={styles.header}>Searching a Word Meaning</Text>\r\n                    <Text style={{marginTop: 20}}>1. Type a word.</Text>\r\n                    <Text>2. Click on the Search button.</Text>\r\n                    <Text>3. You will get the meaning of the word.</Text>\r\n                </View>\r\n                <View style={styles.topicContainer}>\r\n                    <Text style={styles.header}>Text-to-Speech</Text>\r\n                    <Text style={{marginTop: 20}}>1. Click on the word.</Text>\r\n                    <Text>2. You can hear the pronunciation of the word.</Text>\r\n                </View>\r\n                <View style={styles.topicContainer}>\r\n                    <Text style={styles.header}>FAQs</Text>\r\n                    <Text style={styles.FAQs}>Q: Is this an online or an offline app?</Text>\r\n                    <Text>A: It is an online app.</Text>\r\n                    <Text style={styles.FAQs}>Q: Is this app in development?</Text>\r\n                    <Text>A: Yes, this app is in development but the releases are not buggy.</Text>\r\n                </View>\r\n                <Text style={{marginTop: 30, fontWeight: \"bold\", textAlign: 'center'}}>Created by Areen Rath</Text>\r\n            </ScrollView>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    topicContainer: {\r\n        marginTop: 20,\r\n        marginLeft: 15\r\n    },\r\n    header: {\r\n        marginTop: 20,\r\n        fontSize: 30,\r\n        fontWeight: \"bold\"\r\n    },\r\n    FAQs: {\r\n        marginTop: 20\r\n    }\r\n});","import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport Dictionary from './screens/Dictionary';\nimport Help from './screens/Help';\n\nconst Drawer = createDrawerNavigator();\n\nexport default class App extends React.Component {\n  render(){ \n    return (\n      <NavigationContainer>\n        <Drawer.Navigator initialRouteName=\"English Dictionary\" screenOptions={{headerTitleAlign: 'center'}}>\n          <Drawer.Screen\n            name=\"English Dictionary\"\n            component={Dictionary}\n            options={{\n              headerStyle: {\n                  backgroundColor: \"#ffaa00\"\n              },\n              headerTitleStyle: {\n                  fontWeight: \"bold\"\n              }\n            }}\n          />\n          <Drawer.Screen\n            name=\"Help and FAQs\"\n            component={Help}\n            options={{\n              headerStyle: {\n                  backgroundColor: \"#ffaa00\"\n              },\n              headerTitleStyle: {\n                  fontWeight: \"bold\"\n              }\n            }} \n          />\n        </Drawer.Navigator>\n      </NavigationContainer>\n    );\n  }\n}"],"sourceRoot":""}